<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HT.Interview.ChatBot.API</name>
    </assembly>
    <members>
        <member name="T:HT.Interview.ChatBot.API.UserProfile">
            <inheritdoc />
            <summary>
            User Profile
            </summary>
        </member>
        <member name="P:HT.Interview.ChatBot.API.UserProfile.ProfileName">
            <summary>
            Profile name
            </summary>
        </member>
        <member name="M:HT.Interview.ChatBot.API.UserProfile.#ctor">
            <summary>
            Configure auto mapper 
            </summary>
        </member>
        <member name="T:HT.Interview.ChatBot.API.Controllers.UserController">
            <inheritdoc />
            <summary>
            UserController
            </summary>
        </member>
        <member name="M:HT.Interview.ChatBot.API.Controllers.UserController.#ctor(HT.Interview.ChatBot.Common.Contracts.IChatBotDataFactory)">
            <inheritdoc />
            <summary>
            Constructor
            </summary>
            <param name="factory"></param>
        </member>
        <member name="M:HT.Interview.ChatBot.API.Controllers.UserController.GetManyAsync(HT.Interview.ChatBot.API.DTO.UserQuery)">
            <summary>
            Get many async
            </summary>
            <returns></returns>
        </member>
        <member name="M:HT.Interview.ChatBot.API.Controllers.UserController.GetManyAsPageableAsync(HT.Interview.ChatBot.API.DTO.UserQuery)">
            <summary>
            Get many as pageable async
            </summary>
            <returns></returns>
        </member>
        <member name="T:HT.Interview.ChatBot.API.DI.ChatBotServiceRegisterExtension">
            <summary>
            ChatBotServiceRegisterExtension
            </summary>
        </member>
        <member name="M:HT.Interview.ChatBot.API.DI.ChatBotServiceRegisterExtension.AddChatBotDataService(Autofac.ContainerBuilder,Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
            Add ChatBot data service
            </summary>
            <param name="builder"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:HT.Interview.ChatBot.API.DTO.UserQuery">
            <summary>
            UserQuery
            </summary>
        </member>
        <member name="M:HT.Interview.ChatBot.API.DTO.UserQuery.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.LoggedInUserId">
            <summary>
            Get or sets the logged in user id
            </summary>
            <value>
            The LoggedInUserId
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.Id">
            <summary>
            Get or sets id
            </summary>
            <value>
            The Id
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.FirstName">
            <summary>
            Get or sets first name
            </summary>
            <value>
            The FirstName
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.LastName">
            <summary>
            Get or sets first name
            </summary>
            <value>
            The LastName
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.Email">
            <summary>
            Get or sets email
            </summary>
            <value>
            The Email
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.CreatedBy">
            <summary>
            Get or sets the created by
            </summary>
            <value>
            The CreatedBy
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.CreatedOn">
            <summary>
            Get or sets the created on
            </summary>
            <value>
            The CreatedOn
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.ModifiedBy">
            <summary>
            Get or sets the modified by
            </summary>
            <value>
            The ModifiedBy
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.ModifiedOn">
            <summary>
            Get or sets the modified on
            </summary>
            <value>
            The ModifiedOn
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.RecordType">
            <summary>
            Get or sets record type
            </summary>
            <value>
            The RecordType
            </value> 
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.Fields">
            <summary>
            Get or sets fields
            </summary>
            <value>
            The Fields
            </value> 
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.SortExpression">
            <summary>
            Get or Sets sort expression
            </summary>
            <value>
            The Sort Expression
            </value> 
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.CurrentPage">
            <summary>
            Get or sets current page
            </summary>
            <value>
            The Current Page
            </value> 
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserQuery.PageSize">
            <summary>
            Get or sets page size
            </summary>
            <value>
            The Page Size
            </value> 
        </member>
        <member name="T:HT.Interview.ChatBot.API.DTO.UserResponse">
            <summary>
            UserResponse
            </summary>
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserResponse.Id">
            <summary>
            Get or sets the id
            </summary>
            <value>
            The Id
            </value>
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserResponse.FirstName">
            <summary>
            Get or sets the first name
            </summary>
            <value>
            The FirstName
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserResponse.LastName">
            <summary>
            Get or sets the last name
            </summary>
            <value>
            The LastName
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserResponse.Email">
            <summary>
            Get or sets the email
            </summary>
            <value>
            The Email
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserResponse.CreatedBy">
            <summary>
            Get or sets the created by
            </summary>
            <value>
            The CreatedBy
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserResponse.CreatedOn">
            <summary>
            Get or sets the created on
            </summary>
            <value>
            The CreatedOn
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserResponse.ModifiedBy">
            <summary>
            Get or sets the modified by
            </summary>
            <value>
            The ModifiedBy
            </value>  
        </member>
        <member name="P:HT.Interview.ChatBot.API.DTO.UserResponse.ModifiedOn">
            <summary>
            Get or sets the modified on
            </summary>
            <value>
            The ModifiedOn
            </value>  
        </member>
        <member name="T:HT.Interview.ChatBot.API.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:HT.Interview.ChatBot.API.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:HT.Interview.ChatBot.API.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Create Web Host Builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:HT.Interview.ChatBot.API.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:HT.Interview.ChatBot.API.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Startup
            </summary>
            <param name="env"></param>
        </member>
        <member name="P:HT.Interview.ChatBot.API.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:HT.Interview.ChatBot.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:HT.Interview.ChatBot.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
             This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
